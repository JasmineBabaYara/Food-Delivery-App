{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport car from \"../assets/icons/car.png\";\nimport red_pin from \"../assets/icons/red-pin.png\";\nimport star from \"../assets/icons/star.png\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Delivery(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var GOOGLE_API_KEY = \"AIzaSyA5NOK1t9h7oajQTzDcqWpzCYcU0Mk0fMI\";\n  var mapView = React.useRef();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      restaurant = _React$useState2[0],\n      setRestaurant = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      streetName = _React$useState4[0],\n      setStreetName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      fromLocation = _React$useState6[0],\n      setFromLocation = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      toLocation = _React$useState8[0],\n      setToLocation = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      region = _React$useState10[0],\n      setRegion = _React$useState10[1];\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      duration = _React$useState12[0],\n      setDuration = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      isReady = _React$useState14[0],\n      setIsReady = _React$useState14[1];\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      angle = _React$useState16[0],\n      setAngle = _React$useState16[1];\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  React.useEffect(function () {\n    var _route$params = route.params,\n        restaurant = _route$params.restaurant,\n        currentLocation = _route$params.currentLocation;\n    var fromLoc = currentLocation.gps;\n    var toLoc = restaurant.location;\n    var street = currentLocation.streetName;\n    var mapRegion = {\n      latitude: (fromLoc.latitude + toLoc.latitude) / 2,\n      longitude: (fromLoc.longitude + toLoc.longitude) / 2,\n      latitudeDelta: Math.abs(fromLoc.latitude - toLoc.latitude) * 2,\n      longitudeDelta: Math.abs(fromLoc.longitude - toLoc.longitude) * 2\n    };\n    setRestaurant(restaurant);\n    setStreetName(street);\n    setFromLocation(fromLoc);\n    setToLocation(toLoc);\n    setRegion(mapRegion);\n  }, []);\n\n  function calculateAngle(coordinates) {\n    var startLat = coordinates[0][\"latitude\"];\n    var startLng = coordinates[0][\"longitude\"];\n    var endLat = coordinates[1][\"latitude\"];\n    var endLng = coordinates[1][\"longitude\"];\n    var dx = endLat - startLat;\n    var dy = endLng - startLng;\n    return Math.atan2(dy, dx) * 180 / Math.PI;\n  }\n\n  function zoomIn() {\n    var newRegion = {\n      latitude: region.latitude,\n      longitude: region.longitude,\n      latitudeDelta: region.latitudeDelta / 2,\n      longitudeDelta: region.longitudeDelta / 2\n    };\n    setRegion(newRegion);\n    mapView.current.animateToRegion(newRegion, 200);\n  }\n\n  function zoomOut() {\n    var newRegion = {\n      latitude: region.latitude,\n      longitude: region.longitude,\n      latitudeDelta: region.latitudeDelta * 2,\n      longitudeDelta: region.longitudeDelta * 2\n    };\n    setRegion(newRegion);\n    mapView.current.animateToRegion(newRegion, 200);\n  }\n\n  function renderMap() {\n    var destinationMarker = function destinationMarker() {\n      return _jsx(Marker, {\n        coordinate: toLocation,\n        children: _jsx(View, {\n          style: {\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#fff\"\n          },\n          children: _jsx(View, {\n            style: {\n              height: 30,\n              width: 30,\n              borderRadius: 15,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"darkorange\"\n            },\n            children: _jsx(Entypo, {\n              name: \"location-pin\",\n              size: 25,\n              color: \"white\"\n            })\n          })\n        })\n      });\n    };\n\n    var carIcon = function carIcon() {\n      return _jsx(Marker, {\n        coordinate: fromLocation,\n        anchor: {\n          x: 0.5,\n          y: 0.5\n        },\n        flat: true,\n        rotation: angle,\n        children: _jsx(Image, {\n          source: car,\n          style: {\n            width: 40,\n            height: 40\n          }\n        })\n      });\n    };\n\n    return _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsxs(MapView, {\n        ref: mapView,\n        provider: PROVIDER_GOOGLE,\n        initialRegion: region,\n        style: {\n          flex: 1\n        },\n        children: [_jsx(MapViewDirections, {\n          origin: fromLocation,\n          destination: toLocation,\n          apikey: GOOGLE_API_KEY,\n          strokeWidth: 5,\n          strokeColor: \"darkorange\",\n          optimizeWaypoints: true,\n          onReady: function onReady(result) {\n            setDuration(result.duration);\n\n            if (!isReady) {\n              mapView.current.fitToCoordinates(result.coordinates, {\n                edgePadding: {\n                  right: width / 20,\n                  bottom: height / 4,\n                  left: width / 20,\n                  top: height / 8\n                }\n              });\n              var nextLoc = {\n                latitude: result.coordinates[0][\"latitude\"],\n                longitude: result.coordinates[0][\"longitude\"]\n              };\n\n              if (result.coordinates.length >= 2) {\n                var _angle = calculateAngle(result.coordinates);\n\n                setAngle(_angle);\n              }\n\n              setFromLocation(nextLoc);\n              setIsReady(true);\n            }\n          }\n        }), destinationMarker(), carIcon()]\n      })\n    });\n  }\n\n  function renderDestinationHeader() {\n    return _jsx(View, {\n      style: {\n        position: \"absolute\",\n        top: 50,\n        left: 0,\n        right: 0,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          width: width * 0.9,\n          paddingVertical: 15,\n          paddingHorizontal: 20,\n          borderRadius: 30,\n          backgroundColor: \"#fff\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 3\n          },\n          shadowOpacity: 0.4,\n          shadowRadius: 3,\n          elevation: 1\n        },\n        children: [_jsx(Image, {\n          source: red_pin,\n          style: {\n            width: 30,\n            height: 30,\n            marginRight: 10\n          }\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 16\n            },\n            children: streetName\n          })\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 16\n          },\n          children: [Math.ceil(duration), \" mins\"]\n        })]\n      })\n    });\n  }\n\n  function renderDeliveryInfo() {\n    return _jsx(View, {\n      style: {\n        position: \"absolute\",\n        bottom: 50,\n        left: 0,\n        right: 0,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsxs(View, {\n        style: {\n          width: width * 0.9,\n          paddingVertical: 30,\n          paddingHorizontal: 20,\n          borderRadius: 30,\n          backgroundColor: \"#fff\"\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(Image, {\n            source: restaurant == null ? void 0 : restaurant.courier.avatar,\n            style: {\n              width: 50,\n              height: 50,\n              borderRadius: 25\n            }\n          }), _jsxs(View, {\n            style: {\n              flex: 1,\n              marginLeft: 10\n            },\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 18\n                },\n                children: restaurant == null ? void 0 : restaurant.courier.name\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(Image, {\n                  source: star,\n                  style: {\n                    width: 18,\n                    height: 18,\n                    tintColor: \"darkorange\",\n                    marginRight: 10\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    fontSize: 16\n                  },\n                  children: restaurant == null ? void 0 : restaurant.rating\n                })]\n              })]\n            }), _jsx(Text, {\n              style: {\n                color: \"dimgrey\",\n                fontSize: 14\n              },\n              children: restaurant == null ? void 0 : restaurant.name\n            })]\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginTop: 20,\n            justifyContent: \"space-between\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            style: {\n              flex: 1,\n              height: 50,\n              marginRight: 10,\n              backgroundColor: \"darkorange\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Home\");\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: \"#fff\"\n              },\n              children: \"Call\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              flex: 1,\n              height: 50,\n              backgroundColor: \"darkgrey\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: \"#fff\"\n              },\n              children: \"Cancel\"\n            })\n          })]\n        })]\n      })\n    });\n  }\n\n  function renderButtons() {\n    return _jsxs(View, {\n      style: {\n        position: \"absolute\",\n        bottom: height * 0.35,\n        right: 20,\n        width: 60,\n        height: 130,\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          width: 60,\n          height: 60,\n          borderRadius: 30,\n          backgroundColor: \"#fff\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        onPress: function onPress() {\n          return zoomIn();\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 30\n          },\n          children: \"+\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          width: 60,\n          height: 60,\n          borderRadius: 30,\n          backgroundColor: \"#fff\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        onPress: function onPress() {\n          return zoomOut();\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 30\n          },\n          children: \"-\"\n        })\n      })]\n    });\n  }\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [renderMap(), renderDestinationHeader(), renderDeliveryInfo(), renderButtons()]\n  });\n}","map":{"version":3,"sources":["/Users/jasminebabayara/Documents/Projects/ReactNative/Food-Delivery-App/Screens/Delivery.js"],"names":["React","MapView","PROVIDER_GOOGLE","Marker","MapViewDirections","car","red_pin","star","Entypo","Delivery","route","navigation","GOOGLE_API_KEY","mapView","useRef","useState","restaurant","setRestaurant","streetName","setStreetName","fromLocation","setFromLocation","toLocation","setToLocation","region","setRegion","duration","setDuration","isReady","setIsReady","angle","setAngle","Dimensions","get","width","height","useEffect","params","currentLocation","fromLoc","gps","toLoc","location","street","mapRegion","latitude","longitude","latitudeDelta","Math","abs","longitudeDelta","calculateAngle","coordinates","startLat","startLng","endLat","endLng","dx","dy","atan2","PI","zoomIn","newRegion","current","animateToRegion","zoomOut","renderMap","destinationMarker","borderRadius","alignItems","justifyContent","backgroundColor","carIcon","x","y","flex","result","fitToCoordinates","edgePadding","right","bottom","left","top","nextLoc","length","renderDestinationHeader","position","flexDirection","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginRight","fontSize","ceil","renderDeliveryInfo","courier","avatar","marginLeft","name","tintColor","rating","color","marginTop","navigate","goBack","renderButtons"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, Image, TouchableOpacity, Dimensions } from \"react-native\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport car from \"../assets/icons/car.png\";\nimport red_pin from \"../assets/icons/red-pin.png\";\nimport star from \"../assets/icons/star.png\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nexport default function Delivery({ route, navigation }) {\n\n  const GOOGLE_API_KEY = \"AIzaSyA5NOK1t9h7oajQTzDcqWpzCYcU0Mk0fMI\";\n  const mapView = React.useRef();\n\n  const [restaurant, setRestaurant] = React.useState(null);\n  const [streetName, setStreetName] = React.useState(\"\");\n  const [fromLocation, setFromLocation] = React.useState(null);\n  const [toLocation, setToLocation] = React.useState(null);\n  const [region, setRegion] = React.useState(null);\n\n  const [duration, setDuration] = React.useState(0);\n  const [isReady, setIsReady] = React.useState(false);\n  const [angle, setAngle] = React.useState(0);\n\n  const { width, height } = Dimensions.get(\"window\")\n\n  React.useEffect(() => {\n    let { restaurant, currentLocation } = route.params;\n\n    let fromLoc = currentLocation.gps;\n    let toLoc = restaurant.location;\n    let street = currentLocation.streetName;\n\n    let mapRegion = {\n      latitude: (fromLoc.latitude + toLoc.latitude) / 2,\n      longitude: (fromLoc.longitude + toLoc.longitude) / 2,\n      latitudeDelta: Math.abs(fromLoc.latitude - toLoc.latitude) * 2,\n      longitudeDelta: Math.abs(fromLoc.longitude - toLoc.longitude) * 2,\n    };\n\n    setRestaurant(restaurant);\n    setStreetName(street);\n    setFromLocation(fromLoc);\n    setToLocation(toLoc);\n    setRegion(mapRegion);\n  }, []);\n\n  function calculateAngle(coordinates) {\n    let startLat = coordinates[0][\"latitude\"];\n    let startLng = coordinates[0][\"longitude\"];\n    let endLat = coordinates[1][\"latitude\"];\n    let endLng = coordinates[1][\"longitude\"];\n    let dx = endLat - startLat;\n    let dy = endLng - startLng;\n\n    return (Math.atan2(dy, dx) * 180) / Math.PI;\n  }\n\n  function zoomIn() {\n    let newRegion = {\n      latitude: region.latitude,\n      longitude: region.longitude,\n      latitudeDelta: region.latitudeDelta / 2,\n      longitudeDelta: region.longitudeDelta / 2,\n    };\n\n    setRegion(newRegion);\n    mapView.current.animateToRegion(newRegion, 200);\n  }\n\n  function zoomOut() {\n    let newRegion = {\n      latitude: region.latitude,\n      longitude: region.longitude,\n      latitudeDelta: region.latitudeDelta * 2,\n      longitudeDelta: region.longitudeDelta * 2,\n    };\n\n    setRegion(newRegion);\n    mapView.current.animateToRegion(newRegion, 200);\n  }\n\n  function renderMap() {\n    const destinationMarker = () => (\n      <Marker coordinate={toLocation}>\n        <View\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#fff\",\n          }}\n        >\n          <View\n            style={{\n              height: 30,\n              width: 30,\n              borderRadius: 15,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"darkorange\",\n            }}\n          >\n            <Entypo name=\"location-pin\" size={25} color=\"white\" />\n          </View>\n        </View>\n      </Marker>\n    );\n\n    const carIcon = () => (\n      <Marker\n        coordinate={fromLocation}\n        anchor={{ x: 0.5, y: 0.5 }}\n        flat={true}\n        rotation={angle}\n      >\n        <Image\n          source={car}\n          style={{\n            width: 40,\n            height: 40,\n          }}\n        />\n      </Marker>\n    );\n\n    return (\n      <View style={{ flex: 1 }}>\n        <MapView\n          ref={mapView}\n          provider={PROVIDER_GOOGLE}\n          initialRegion={region}\n          style={{ flex: 1 }}\n        >\n          <MapViewDirections\n            origin={fromLocation}\n            destination={toLocation}\n            apikey={GOOGLE_API_KEY}\n            strokeWidth={5}\n            strokeColor={\"darkorange\"}\n            optimizeWaypoints={true}\n            onReady={(result) => {\n              setDuration(result.duration);\n\n              if (!isReady) {\n                // Fit route into maps\n                mapView.current.fitToCoordinates(result.coordinates, {\n                  edgePadding: {\n                    right: width / 20,\n                    bottom: height / 4,\n                    left: width / 20,\n                    top: height / 8,\n                  },\n                });\n\n                // Reposition the car\n                let nextLoc = {\n                  latitude: result.coordinates[0][\"latitude\"],\n                  longitude: result.coordinates[0][\"longitude\"],\n                };\n\n                if (result.coordinates.length >= 2) {\n                  let angle = calculateAngle(result.coordinates);\n                  setAngle(angle);\n                }\n\n                setFromLocation(nextLoc);\n                setIsReady(true);\n              }\n            }}\n          />\n          {destinationMarker()}\n          {carIcon()}\n        </MapView>\n      </View>\n    );\n  }\n\n  function renderDestinationHeader() {\n    return (\n      <View\n        style={{\n          position: \"absolute\",\n          top: 50,\n          left: 0,\n          right: 0,\n          height: 50,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          \n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            width: width * 0.9,\n            paddingVertical: 15,\n            paddingHorizontal: 20,\n            borderRadius: 30,\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 3,\n          },\n          shadowOpacity: 0.4,\n          shadowRadius: 3,\n          elevation: 1,\n          }}\n        >\n          <Image\n            source={red_pin}\n            style={{\n              width: 30,\n              height: 30,\n              marginRight: 10,\n            }}\n          />\n\n          <View style={{ flex: 1 }}>\n            <Text style={{ fontSize: 16 }}>{streetName}</Text>\n          </View>\n\n          <Text style={{ fontSize: 16 }}>{Math.ceil(duration)} mins</Text>\n        </View>\n      </View>\n    );\n  }\n\n  function renderDeliveryInfo() {\n    return (\n      <View\n        style={{\n          position: \"absolute\",\n          bottom: 50,\n          left: 0,\n          right: 0,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View\n          style={{\n            width: width * 0.9,\n            paddingVertical: 30,\n            paddingHorizontal: 20,\n            borderRadius: 30,\n            backgroundColor: \"#fff\",\n          }}\n        >\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            {/* Avatar */}\n            <Image\n              source={restaurant?.courier.avatar}\n              style={{\n                width: 50,\n                height: 50,\n                borderRadius: 25,\n              }}\n            />\n\n            <View style={{ flex: 1, marginLeft: 10 }}>\n              {/* Name & Rating */}\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 18 }}>{restaurant?.courier.name}</Text>\n                <View style={{ flexDirection: \"row\" }}>\n                  <Image\n                    source={star}\n                    style={{\n                      width: 18,\n                      height: 18,\n                      tintColor: \"darkorange\",\n                      marginRight: 10,\n                    }}\n                  />\n                  <Text style={{ fontSize: 16 }}>{restaurant?.rating}</Text>\n                </View>\n              </View>\n\n              {/* Restaurant */}\n              <Text style={{ color: \"dimgrey\", fontSize: 14 }}>\n                {restaurant?.name}\n              </Text>\n            </View>\n          </View>\n\n          {/* Buttons */}\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginTop: 20,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                flex: 1,\n                height: 50,\n                marginRight: 10,\n                backgroundColor: \"darkorange\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: 10,\n              }}\n              onPress={() => navigation.navigate(\"Home\")}\n            >\n              <Text style={{ fontSize: 18, color: \"#fff\" }}>Call</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={{\n                flex: 1,\n                height: 50,\n                backgroundColor: \"darkgrey\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: 10,\n              }}\n              onPress={() => navigation.goBack()}\n            >\n              <Text style={{ fontSize: 18, color: \"#fff\" }}>Cancel</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  function renderButtons() {\n    return (\n      <View\n        style={{\n          position: \"absolute\",\n          bottom: height * 0.35,\n          right: 20,\n          width: 60,\n          height: 130,\n          justifyContent: \"space-between\",\n        }}\n      >\n        {/* Zoom In */}\n        <TouchableOpacity\n          style={{\n            width: 60,\n            height: 60,\n            borderRadius: 30,\n            backgroundColor: \"#fff\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onPress={() => zoomIn()}\n        >\n          <Text style={{ fontSize: 30 }}>+</Text>\n        </TouchableOpacity>\n\n        {/* Zoom Out */}\n        <TouchableOpacity\n          style={{\n            width: 60,\n            height: 60,\n            borderRadius: 30,\n            backgroundColor: \"#fff\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onPress={() => zoomOut()}\n        >\n          <Text style={{ fontSize: 30 }}>-</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <View style={{ flex: 1 }}>\n      {renderMap()}\n      {renderDestinationHeader()}\n      {renderDeliveryInfo()}\n      {renderButtons()}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}