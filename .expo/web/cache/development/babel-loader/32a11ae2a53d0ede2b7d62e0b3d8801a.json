{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Feather, FontAwesome } from \"@expo/vector-icons\";\nimport nearby from \"../assets/icons/nearby.png\";\nimport basket from \"../assets/icons/shopping-basket.png\";\nimport rice_bowl from \"../assets/icons/rice-bowl.png\";\nimport noodle from \"../assets/icons/noodle.png\";\nimport hotdog from \"../assets/icons/hotdog.png\";\nimport salad from \"../assets/icons/salad.png\";\nimport hamburger from \"../assets/icons/hamburger.png\";\nimport pizza from \"../assets/icons/pizza.png\";\nimport fries from \"../assets/icons/fries.png\";\nimport sushi from \"../assets/icons/sushi.png\";\nimport donut from \"../assets/icons/donut.png\";\nimport drink from \"../assets/icons/drink.png\";\nimport star from \"../assets/icons/star.png\";\nimport avatar_1 from \"../assets/images/avatar-1.jpg\";\nimport avatar_2 from \"../assets/images/avatar-2.jpg\";\nimport avatar_3 from \"../assets/images/avatar-3.jpg\";\nimport avatar_4 from \"../assets/images/avatar-4.jpg\";\nimport avatar_5 from \"../assets/images/avatar-5.jpg\";\nimport assorted_noodles from \"../assets/images/assorted-noodles.jpeg\";\nimport baked_fries from \"../assets/images/baked-fries.jpg\";\nimport crispy_chicken_burger from \"../assets/images/chicken-burger.jpeg\";\nimport chicken_noodles from \"../assets/images/chicken-noodles.jpeg\";\nimport chicken_pizza from \"../assets/images/chicken_pizza.jpeg\";\nimport cuisine from \"../assets/images/cuisine.jpeg\";\nimport chicken_burger_honey from \"../assets/images/chicken-burger-honey.jpeg\";\nimport dessert from \"../assets/images/Desserts.jpeg\";\nimport drinks from \"../assets/images/drinks.jpeg\";\nimport fufu from \"../assets/images/fufu.jpeg\";\nimport hot_dog from \"../assets/images/hotdog.jpeg\";\nimport hot_dog_restaurant from \"../assets/images/hot-dog-restaurant.jpeg\";\nimport icecream from \"../assets/images/icecream.webp\";\nimport japanese_restaurant from \"../assets/images/japanese-restaurant.jpg\";\nimport juice from \"../assets/images/juice.jpeg\";\nimport krushers from \"../assets/images/krushers.jpeg\";\nimport kenkey from \"../assets/images/kenkey.jpg\";\nimport pastries from \"../assets/images/pastries.jpeg\";\nimport pizza_restaurant from \"../assets/images/pizza-restaurant.jpeg\";\nimport pepperoni from \"../assets/images/pepperoni.jpeg\";\nimport special_crispy_burger from \"../assets/images/special-crispy-burger.jpeg\";\nimport salad_img from \"../assets/images/salad.jpg\";\nimport sushi_img from \"../assets/images/sushi.jpg\";\nimport shrimp_noodles from \"../assets/images/shrimp-noodles.jpeg\";\nimport spicy_noodles from \"../assets/images/spicy-noodles.jpeg\";\nimport soda from \"../assets/images/soda.jpeg\";\nimport smoothies from \"../assets/images/smoothies.webp\";\nimport tomato_pasta from \"../assets/images/tomato-pasta.jpg\";\nimport tz from \"../assets/images/tz.jpeg\";\nimport waakye from \"../assets/images/waakye.jpeg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  var initialCurrentLocation = {\n    streetName: \"East Legon\",\n    gps: {\n      latitude: 5.714167,\n      longitude: -0.15418\n    }\n  };\n  var categoryData = [{\n    id: 1,\n    name: \"Rice\",\n    icon: rice_bowl\n  }, {\n    id: 2,\n    name: \"Noodles\",\n    icon: noodle\n  }, {\n    id: 3,\n    name: \"Hot Dogs\",\n    icon: hotdog\n  }, {\n    id: 4,\n    name: \"Salads\",\n    icon: salad\n  }, {\n    id: 5,\n    name: \"Burgers\",\n    icon: hamburger\n  }, {\n    id: 6,\n    name: \"Pizza\",\n    icon: pizza\n  }, {\n    id: 7,\n    name: \"Snacks\",\n    icon: fries\n  }, {\n    id: 8,\n    name: \"Sushi\",\n    icon: sushi\n  }, {\n    id: 9,\n    name: \"Desserts\",\n    icon: donut\n  }, {\n    id: 10,\n    name: \"Drinks\",\n    icon: drink\n  }, {\n    id: 11,\n    name: \"Shakes\",\n    icon: drink\n  }];\n  var affordable = 1;\n  var fairPrice = 2;\n  var expensive = 3;\n  var restaurantData = [{\n    id: 1,\n    name: \"Special Crispy Burger\",\n    rating: 4.8,\n    categories: [5, 7],\n    priceRating: affordable,\n    photo: special_crispy_burger,\n    duration: \"30 - 45 min\",\n    location: {\n      latitude: 5.5628957,\n      longitude: -0.177995\n    },\n    courier: {\n      avatar: avatar_1,\n      name: \"Amy\"\n    },\n    menu: [{\n      menuId: 1,\n      name: \"Crispy Chicken Burger\",\n      photo: crispy_chicken_burger,\n      description: \"Burger with crispy chicken, cheese and lettuce\",\n      calories: 200,\n      price: 10\n    }, {\n      menuId: 2,\n      name: \"Crispy Chicken Burger with Honey Mustard\",\n      photo: chicken_burger_honey,\n      description: \"Crispy Chicken Burger with Honey Mustard Coleslaw\",\n      calories: 250,\n      price: 15\n    }, {\n      menuId: 3,\n      name: \"Crispy Baked French Fries\",\n      photo: baked_fries,\n      description: \"Crispy Baked French Fries\",\n      calories: 194,\n      price: 8\n    }]\n  }, {\n    id: 2,\n    name: \"Sweet and Spicy Noodles\",\n    rating: 4.9,\n    categories: [2],\n    priceRating: affordable,\n    photo: spicy_noodles,\n    duration: \"25 - 35 min\",\n    location: {\n      latitude: 5.62042,\n      longitude: -0.177506\n    },\n    courier: {\n      avatar: avatar_1,\n      name: \"Paul\"\n    },\n    menu: [{\n      menuId: 4,\n      name: \"Shrimp Noodles\",\n      photo: shrimp_noodles,\n      description: \"Sweet and Spicy noodles with shrimp\",\n      calories: 100,\n      price: 30\n    }, {\n      menuId: 5,\n      name: \"Chicken Noodles\",\n      photo: chicken_noodles,\n      description: \"Hot Noodles with chicken\",\n      calories: 100,\n      price: 20\n    }, {\n      menuId: 6,\n      name: \"Assorted Noodles\",\n      photo: assorted_noodles,\n      description: \"Noodles with chicken, susuage, eggs and vegetables\",\n      calories: 300,\n      price: 40\n    }]\n  }, {\n    id: 3,\n    name: \" Pizza\",\n    rating: 4.8,\n    categories: [4, 6],\n    priceRating: expensive,\n    photo: pizza_restaurant,\n    duration: \"15 - 20 min\",\n    location: {\n      latitude: 5.6436124,\n      longitude: -0.1582533\n    },\n    courier: {\n      avatar: avatar_2,\n      name: \"Jackson\"\n    },\n    menu: [{\n      menuId: 7,\n      name: \"Pepperoni Pizza\",\n      photo: pepperoni,\n      description: \"Pepperoni, pizza crust, sauce, mozzarella, cheese\",\n      calories: 250,\n      price: 20\n    }, {\n      menuId: 8,\n      name: \"Chicken Pizza\",\n      photo: chicken_pizza,\n      description: \"Fresh tomatoes, chicken breast, sauce and melted cheese\",\n      calories: 250,\n      price: 20\n    }, {\n      menuId: 9,\n      name: \"Tomato Pasta\",\n      photo: tomato_pasta,\n      description: \"Pasta with fresh tomatoes\",\n      calories: 100,\n      price: 10\n    }, {\n      menuId: 10,\n      name: \"Mediterranean Chopped Salad \",\n      photo: salad_img,\n      description: \"Finely chopped lettuce, tomatoes, cucumbers\",\n      calories: 100,\n      price: 10\n    }]\n  }, {\n    id: 4,\n    name: \" Hotdogs\",\n    rating: 4.8,\n    categories: [3, 7],\n    priceRating: expensive,\n    photo: hot_dog_restaurant,\n    duration: \"20 - 25 min\",\n    location: {\n      latitude: 5.6436124,\n      longitude: -0.1582533\n    },\n    courier: {\n      avatar: avatar_3,\n      name: \"James\"\n    },\n    menu: [{\n      menuId: 11,\n      name: \"Chicago Style Hot Dog\",\n      photo: hot_dog,\n      description: \"Fresh tomatoes, all beef hot dogs\",\n      calories: 100,\n      price: 20\n    }]\n  }, {\n    id: 5,\n    name: \"Sashimi Sushi\",\n    rating: 4.8,\n    categories: [8],\n    priceRating: expensive,\n    photo: japanese_restaurant,\n    duration: \"10 - 15 min\",\n    location: {\n      latitude: 5.620171,\n      longitude: -0.1781939\n    },\n    courier: {\n      avatar: avatar_4,\n      name: \"Ahmad\"\n    },\n    menu: [{\n      menuId: 12,\n      name: \"Sushi sets\",\n      photo: sushi_img,\n      description: \"Fresh salmon, sushi rice, fresh juicy avocado\",\n      calories: 100,\n      price: 50\n    }]\n  }, {\n    id: 6,\n    name: \"Cuisine\",\n    rating: 4.8,\n    categories: [1, 2],\n    priceRating: affordable,\n    photo: cuisine,\n    duration: \"15 - 20 min\",\n    location: {\n      latitude: 5.64203721,\n      longitude: -0.16025639\n    },\n    courier: {\n      avatar: avatar_4,\n      name: \"Muthu\"\n    },\n    menu: [{\n      menuId: 13,\n      name: \"Fufu with Chicken Soup\",\n      photo: fufu,\n      description: \"Fufu with pepper chicken soup\",\n      calories: 200,\n      price: 15\n    }, {\n      menuId: 14,\n      name: \"Tuo zaafi\",\n      photo: tz,\n      description: \"Cassava flour with varieties of meat\",\n      calories: 300,\n      price: 10\n    }, {\n      menuId: 15,\n      name: \"Kenkey with pepper and fish\",\n      photo: kenkey,\n      description: \"A staple dish with hot pepper, sliced onions and fresh tomatoes wth shrimp and fish\",\n      calories: 300,\n      price: 10\n    }, {\n      menuId: 16,\n      name: \"Waakye\",\n      photo: waakye,\n      description: \"A traditional dish of cooked rice and beans.\",\n      calories: 300,\n      price: 10\n    }]\n  }, {\n    id: 7,\n    name: \"Dessets\",\n    rating: 4.9,\n    categories: [9, 11, 7],\n    priceRating: affordable,\n    photo: dessert,\n    duration: \"35 - 40 min\",\n    location: {\n      latitude: 5.5697895,\n      longitude: -0.1685567\n    },\n    courier: {\n      avatar: avatar_1,\n      name: \"Jessie\"\n    },\n    menu: [{\n      menuId: 17,\n      name: \"Ice cream\",\n      photo: icecream,\n      description: \"Multiple scoops of icecream with toppings\",\n      calories: 100,\n      price: 2\n    }, {\n      menuId: 18,\n      name: \"Pastries\",\n      photo: pastries,\n      description: \"Baked goodies\",\n      calories: 100,\n      price: 3\n    }, {\n      menuId: 19,\n      name: \"Krushers\",\n      photo: krushers,\n      description: \"Differbt flavoured smoothies with crushed biscuits\",\n      calories: 300,\n      price: 2\n    }]\n  }, {\n    id: 8,\n    name: \"Drinks\",\n    rating: 4.9,\n    categories: [10, 11, 7, 9],\n    priceRating: affordable,\n    photo: drinks,\n    duration: \"5 - 15 min\",\n    location: {\n      latitude: 5.5697895,\n      longitude: -0.1685567\n    },\n    courier: {\n      avatar: avatar_1,\n      name: \"Jessie\"\n    },\n    menu: [{\n      menuId: 20,\n      name: \"Fruit Juice\",\n      photo: juice,\n      description: \"Varieties of healthy fruit juice \",\n      calories: 100,\n      price: 2\n    }, {\n      menuId: 21,\n      name: \"Carbonated drinks\",\n      photo: soda,\n      description: \"carbonated drinks\",\n      calories: 100,\n      price: 3\n    }, {\n      menuId: 22,\n      name: \"Smoothies\",\n      photo: smoothies,\n      description: \"Beverage made by puréeing ingredients\",\n      calories: 300,\n      price: 20\n    }]\n  }];\n\n  var _React$useState = React.useState(categoryData),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      categories = _React$useState2[0],\n      setCategories = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedCategory = _React$useState4[0],\n      setSelectedCategory = _React$useState4[1];\n\n  var _React$useState5 = React.useState(restaurantData),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      restaurants = _React$useState6[0],\n      setRestaurants = _React$useState6[1];\n\n  var _React$useState7 = React.useState(initialCurrentLocation),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      currentLocation = _React$useState8[0],\n      setCurrentLocation = _React$useState8[1];\n\n  function onSelectCategory(category) {\n    var restaurantList = restaurantData.filter(function (a) {\n      return a.categories.includes(category.id);\n    });\n    setRestaurants(restaurantList);\n    setSelectedCategory(category);\n  }\n\n  function getCategoryNameById(id) {\n    var category = categories.filter(function (a) {\n      return a.id == id;\n    });\n    if (category.length > 0) return category[0].name;\n    return \"\";\n  }\n\n  function renderMainCategories() {\n    var renderItem = function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _jsxs(TouchableOpacity, {\n        style: _objectSpread({\n          padding: 10,\n          paddingBottom: 20,\n          backgroundColor: (selectedCategory == null ? void 0 : selectedCategory.id) == item.id ? \"darkorange\" : \"#fff\",\n          borderRadius: 32,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginRight: 10\n        }, styles.shadow),\n        onPress: function onPress() {\n          return onSelectCategory(item);\n        },\n        children: [_jsx(View, {\n          style: {\n            width: 50,\n            height: 50,\n            borderRadius: 25,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: (selectedCategory == null ? void 0 : selectedCategory.id) == item.id ? \"#fff\" : \"#F5F5F6\"\n          },\n          children: _jsx(Image, {\n            source: item.icon,\n            resizeMode: \"contain\",\n            style: {\n              width: 30,\n              height: 30\n            }\n          })\n        }), _jsx(Text, {\n          style: {\n            marginTop: 10,\n            color: (selectedCategory == null ? void 0 : selectedCategory.id) == item.id ? \"#fff\" : \"#000\",\n            fontSize: 12\n          },\n          children: item.name\n        })]\n      });\n    };\n\n    return _jsxs(View, {\n      style: {\n        padding: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\"\n        },\n        children: \"Main\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\"\n        },\n        children: \"Categories\"\n      }), _jsx(FlatList, {\n        data: categories,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        renderItem: renderItem,\n        contentContainerStyle: {\n          paddingVertical: 20\n        }\n      })]\n    });\n  }\n\n  function renderRestaurantList() {\n    var renderItem = function renderItem(_ref3) {\n      var item = _ref3.item;\n      return _jsxs(TouchableOpacity, {\n        style: {\n          marginBottom: 20\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"Order\", {\n            item: item,\n            currentLocation: currentLocation\n          });\n        },\n        children: [_jsxs(View, {\n          style: {\n            marginBottom: 10\n          },\n          children: [_jsx(Image, {\n            source: item.photo,\n            resizeMode: \"cover\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              borderRadius: 30\n            }\n          }), _jsx(View, {\n            style: _objectSpread({\n              position: \"absolute\",\n              bottom: 0,\n              height: 50,\n              width: width * 0.35,\n              backgroundColor: \"#fff\",\n              borderTopRightRadius: 30,\n              borderBottomLeftRadius: 30,\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }, styles.shadow),\n            children: _jsx(Text, {\n              style: {\n                fontSize: 18,\n                fontWeight: \"bold\"\n              },\n              children: item.duration\n            })\n          })]\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: \"bold\"\n          },\n          children: item.name\n        }), _jsxs(View, {\n          style: {\n            marginTop: 10,\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Image, {\n            source: star,\n            style: {\n              height: 20,\n              width: 20,\n              tintColor: \"darkorange\",\n              marginRight: 10\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16\n            },\n            children: item.rating\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginLeft: 10\n            },\n            children: [item.categories.map(function (categoryId) {\n              return _jsxs(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontSize: 16\n                  },\n                  children: getCategoryNameById(categoryId)\n                }), _jsx(Text, {\n                  style: {\n                    fontSize: 20,\n                    color: \"#898C95\"\n                  },\n                  children: \" . \"\n                })]\n              }, categoryId);\n            }), [1, 2, 3].map(function (priceRating) {\n              return _jsx(Text, {\n                style: {\n                  fontSize: 16,\n                  color: priceRating <= item.priceRating ? \"#000\" : \"darkgrey\"\n                },\n                children: \"$\"\n              }, priceRating);\n            })]\n          })]\n        })]\n      });\n    };\n\n    return _jsx(FlatList, {\n      data: restaurants,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.id;\n      },\n      renderItem: renderItem,\n      contentContainerStyle: {\n        paddingHorizontal: 20,\n        paddingBottom: 30\n      }\n    });\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.location_img,\n        children: _jsx(Image, {\n          source: nearby,\n          resizeMode: \"contain\",\n          style: styles.nearby\n        })\n      }), _jsx(View, {\n        style: styles.street,\n        children: _jsx(Text, {\n          style: styles.street_name,\n          children: currentLocation.streetName\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.cart,\n        children: _jsx(Image, {\n          source: basket,\n          resizeMode: \"contain\",\n          style: styles.basket\n        })\n      })]\n    }), renderMainCategories(), renderRestaurantList()]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\"\n  },\n  header: {\n    flexDirection: \"row\",\n    height: 50,\n    justifyContent: \"space-between\"\n  },\n  location_img: {\n    width: 50,\n    paddingLeft: 20,\n    justifyContent: \"center\"\n  },\n  nearby: {\n    width: 30,\n    height: 30\n  },\n  street: {\n    backgroundColor: \"#e6e6e6\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    width: \"50%\",\n    height: \"70%\",\n    alignSelf: \"center\"\n  },\n  street_name: {\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  cart: {\n    width: 50,\n    paddingRight: 20,\n    justifyContent: \"center\"\n  },\n  basket: {\n    width: 30,\n    height: 30\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 1\n  }\n});","map":{"version":3,"sources":["/Users/jasminebabayara/Documents/Projects/ReactNative/Food-Delivery-App/Screens/Home.js"],"names":["React","Feather","FontAwesome","nearby","basket","rice_bowl","noodle","hotdog","salad","hamburger","pizza","fries","sushi","donut","drink","star","avatar_1","avatar_2","avatar_3","avatar_4","avatar_5","assorted_noodles","baked_fries","crispy_chicken_burger","chicken_noodles","chicken_pizza","cuisine","chicken_burger_honey","dessert","drinks","fufu","hot_dog","hot_dog_restaurant","icecream","japanese_restaurant","juice","krushers","kenkey","pastries","pizza_restaurant","pepperoni","special_crispy_burger","salad_img","sushi_img","shrimp_noodles","spicy_noodles","soda","smoothies","tomato_pasta","tz","waakye","Home","navigation","Dimensions","get","width","height","initialCurrentLocation","streetName","gps","latitude","longitude","categoryData","id","name","icon","affordable","fairPrice","expensive","restaurantData","rating","categories","priceRating","photo","duration","location","courier","avatar","menu","menuId","description","calories","price","useState","setCategories","selectedCategory","setSelectedCategory","restaurants","setRestaurants","currentLocation","setCurrentLocation","onSelectCategory","category","restaurantList","filter","a","includes","getCategoryNameById","length","renderMainCategories","renderItem","item","padding","paddingBottom","backgroundColor","borderRadius","alignItems","justifyContent","marginRight","styles","shadow","marginTop","color","fontSize","fontWeight","paddingVertical","renderRestaurantList","marginBottom","navigate","position","bottom","borderTopRightRadius","borderBottomLeftRadius","flexDirection","tintColor","marginLeft","map","categoryId","paddingHorizontal","container","header","location_img","street","street_name","cart","StyleSheet","create","display","paddingLeft","alignSelf","paddingRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n  FlatList,\n  Dimensions,\n} from \"react-native\";\nimport { Feather, FontAwesome } from \"@expo/vector-icons\";\n\n//importing icons\nimport nearby from \"../assets/icons/nearby.png\";\nimport basket from \"../assets/icons/shopping-basket.png\";\nimport rice_bowl from \"../assets/icons/rice-bowl.png\";\nimport noodle from \"../assets/icons/noodle.png\";\nimport hotdog from \"../assets/icons/hotdog.png\";\nimport salad from \"../assets/icons/salad.png\";\nimport hamburger from \"../assets/icons/hamburger.png\";\nimport pizza from \"../assets/icons/pizza.png\";\nimport fries from \"../assets/icons/fries.png\";\nimport sushi from \"../assets/icons/sushi.png\";\nimport donut from \"../assets/icons/donut.png\";\nimport drink from \"../assets/icons/drink.png\";\nimport star from \"../assets/icons/star.png\";\n\n//importing images\nimport avatar_1 from \"../assets/images/avatar-1.jpg\";\nimport avatar_2 from \"../assets/images/avatar-2.jpg\";\nimport avatar_3 from \"../assets/images/avatar-3.jpg\";\nimport avatar_4 from \"../assets/images/avatar-4.jpg\";\nimport avatar_5 from \"../assets/images/avatar-5.jpg\";\nimport assorted_noodles from \"../assets/images/assorted-noodles.jpeg\";\nimport baked_fries from \"../assets/images/baked-fries.jpg\";\nimport crispy_chicken_burger from \"../assets/images/chicken-burger.jpeg\";\nimport chicken_noodles from \"../assets/images/chicken-noodles.jpeg\";\nimport chicken_pizza from \"../assets/images/chicken_pizza.jpeg\";\nimport cuisine from \"../assets/images/cuisine.jpeg\";\nimport chicken_burger_honey from \"../assets/images/chicken-burger-honey.jpeg\";\nimport dessert from \"../assets/images/Desserts.jpeg\";\nimport drinks from \"../assets/images/drinks.jpeg\";\nimport fufu from \"../assets/images/fufu.jpeg\";\nimport hot_dog from \"../assets/images/hotdog.jpeg\";\nimport hot_dog_restaurant from \"../assets/images/hot-dog-restaurant.jpeg\";\nimport icecream from \"../assets/images/icecream.webp\";\nimport japanese_restaurant from \"../assets/images/japanese-restaurant.jpg\";\nimport juice from '../assets/images/juice.jpeg';\nimport krushers from \"../assets/images/krushers.jpeg\";\nimport kenkey from \"../assets/images/kenkey.jpg\";\nimport pastries from \"../assets/images/pastries.jpeg\";\nimport pizza_restaurant from \"../assets/images/pizza-restaurant.jpeg\";\nimport pepperoni from \"../assets/images/pepperoni.jpeg\";\nimport special_crispy_burger from \"../assets/images/special-crispy-burger.jpeg\";\nimport salad_img from \"../assets/images/salad.jpg\";\nimport sushi_img from \"../assets/images/sushi.jpg\";\nimport shrimp_noodles from \"../assets/images/shrimp-noodles.jpeg\";\nimport spicy_noodles from \"../assets/images/spicy-noodles.jpeg\";\nimport soda from '../assets/images/soda.jpeg';\nimport smoothies from \"../assets/images/smoothies.webp\";\nimport tomato_pasta from \"../assets/images/tomato-pasta.jpg\";\nimport tz from \"../assets/images/tz.jpeg\";\nimport waakye from \"../assets/images/waakye.jpeg\";\n\nexport default function Home({ navigation }) {\n  // Dummy Datas\n\n  const { width, height } = Dimensions.get(\"window\");\n\n  const initialCurrentLocation = {\n    streetName: \"East Legon\",\n    gps: {\n      latitude:  5.714167 ,\n      longitude: -0.15418,\n    },\n  };\n\n  const categoryData = [\n    {\n      id: 1,\n      name: \"Rice\",\n      icon: rice_bowl,\n    },\n    {\n      id: 2,\n      name: \"Noodles\",\n      icon: noodle,\n    },\n    {\n      id: 3,\n      name: \"Hot Dogs\",\n      icon: hotdog,\n    },\n    {\n      id: 4,\n      name: \"Salads\",\n      icon: salad,\n    },\n    {\n      id: 5,\n      name: \"Burgers\",\n      icon: hamburger,\n    },\n    {\n      id: 6,\n      name: \"Pizza\",\n      icon: pizza,\n    },\n    {\n      id: 7,\n      name: \"Snacks\",\n      icon: fries,\n    },\n    {\n      id: 8,\n      name: \"Sushi\",\n      icon: sushi,\n    },\n    {\n      id: 9,\n      name: \"Desserts\",\n      icon: donut,\n    },\n    {\n      id: 10,\n      name: \"Drinks\",\n      icon: drink,\n    },\n    {\n      id: 11,\n      name: \"Shakes\",\n      icon: drink,\n    },\n  ];\n\n  // price rating\n  const affordable = 1;\n  const fairPrice = 2;\n  const expensive = 3;\n\n  const restaurantData = [\n    {\n      id: 1,\n      name: \"Special Crispy Burger\",\n      rating: 4.8,\n      categories: [5, 7],\n      priceRating: affordable,\n      photo: special_crispy_burger,\n      duration: \"30 - 45 min\",\n      location: {\n        latitude: 5.5628957,\n        longitude: -0.177995,\n      },\n      courier: {\n        avatar: avatar_1,\n        name: \"Amy\",\n      },\n      menu: [\n        {\n          menuId: 1,\n          name: \"Crispy Chicken Burger\",\n          photo: crispy_chicken_burger,\n          description: \"Burger with crispy chicken, cheese and lettuce\",\n          calories: 200,\n          price: 10,\n        },\n        {\n          menuId: 2,\n          name: \"Crispy Chicken Burger with Honey Mustard\",\n          photo: chicken_burger_honey,\n          description: \"Crispy Chicken Burger with Honey Mustard Coleslaw\",\n          calories: 250,\n          price: 15,\n        },\n        {\n          menuId: 3,\n          name: \"Crispy Baked French Fries\",\n          photo: baked_fries,\n          description: \"Crispy Baked French Fries\",\n          calories: 194,\n          price: 8,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: \"Sweet and Spicy Noodles\",\n      rating: 4.9,\n      categories: [2],\n      priceRating: affordable,\n      photo: spicy_noodles,\n      duration: \"25 - 35 min\",\n      location: {\n        latitude: 5.62042,\n        longitude: -0.177506,\n      },\n      courier: {\n        avatar: avatar_1,\n        name: \"Paul\",\n      },\n      menu: [\n        {\n          menuId: 4,\n          name: \"Shrimp Noodles\",\n          photo: shrimp_noodles,\n          description: \"Sweet and Spicy noodles with shrimp\",\n          calories: 100,\n          price: 30,\n        },\n        {\n          menuId: 5,\n          name: \"Chicken Noodles\",\n          photo: chicken_noodles,\n          description: \"Hot Noodles with chicken\",\n          calories: 100,\n          price: 20,\n        },\n        {\n          menuId: 6,\n          name: \"Assorted Noodles\",\n          photo: assorted_noodles,\n          description: \"Noodles with chicken, susuage, eggs and vegetables\",\n          calories: 300,\n          price: 40,\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: \" Pizza\",\n      rating: 4.8,\n      categories: [4, 6],\n      priceRating: expensive,\n      photo: pizza_restaurant,\n      duration: \"15 - 20 min\",\n      location: {\n        latitude: 5.6436124,\n        longitude: -0.1582533,\n      },\n      courier: {\n        avatar: avatar_2,\n        name: \"Jackson\",\n      },\n      menu: [\n        {\n          menuId: 7,\n          name: \"Pepperoni Pizza\",\n          photo: pepperoni,\n          description: \"Pepperoni, pizza crust, sauce, mozzarella, cheese\",\n          calories: 250,\n          price: 20,\n        },\n        {\n          menuId: 8,\n          name: \"Chicken Pizza\",\n          photo: chicken_pizza,\n          description:\n            \"Fresh tomatoes, chicken breast, sauce and melted cheese\",\n          calories: 250,\n          price: 20,\n        },\n        {\n          menuId: 9,\n          name: \"Tomato Pasta\",\n          photo: tomato_pasta,\n          description: \"Pasta with fresh tomatoes\",\n          calories: 100,\n          price: 10,\n        },\n        {\n          menuId: 10,\n          name: \"Mediterranean Chopped Salad \",\n          photo: salad_img,\n          description: \"Finely chopped lettuce, tomatoes, cucumbers\",\n          calories: 100,\n          price: 10,\n        },\n      ],\n    },\n    {\n      id: 4,\n      name: \" Hotdogs\",\n      rating: 4.8,\n      categories: [3, 7],\n      priceRating: expensive,\n      photo: hot_dog_restaurant,\n      duration: \"20 - 25 min\",\n      location: {\n        latitude: 5.6436124,\n        longitude: -0.1582533,\n      },\n      courier: {\n        avatar: avatar_3,\n        name: \"James\",\n      },\n      menu: [\n        {\n          menuId: 11,\n          name: \"Chicago Style Hot Dog\",\n          photo: hot_dog,\n          description: \"Fresh tomatoes, all beef hot dogs\",\n          calories: 100,\n          price: 20,\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: \"Sashimi Sushi\",\n      rating: 4.8,\n      categories: [8],\n      priceRating: expensive,\n      photo: japanese_restaurant,\n      duration: \"10 - 15 min\",\n      location: {\n        latitude: 5.620171,\n        longitude: -0.1781939,\n      },\n      courier: {\n        avatar: avatar_4,\n        name: \"Ahmad\",\n      },\n      menu: [\n        {\n          menuId: 12,\n          name: \"Sushi sets\",\n          photo: sushi_img,\n          description: \"Fresh salmon, sushi rice, fresh juicy avocado\",\n          calories: 100,\n          price: 50,\n        },\n      ],\n    },\n    {\n      id: 6,\n      name: \"Cuisine\",\n      rating: 4.8,\n      categories: [1, 2],\n      priceRating: affordable,\n      photo: cuisine,\n      duration: \"15 - 20 min\",\n      location: {\n        latitude: 5.64203721,\n        longitude: -0.16025639 ,\n      },\n      courier: {\n        avatar: avatar_4,\n        name: \"Muthu\",\n      },\n      menu: [\n        {\n          menuId: 13,\n          name: \"Fufu with Chicken Soup\",\n          photo: fufu,\n          description: \"Fufu with pepper chicken soup\",\n          calories: 200,\n          price: 15,\n        },\n        {\n          menuId: 14,\n          name: \"Tuo zaafi\",\n          photo: tz,\n          description: \"Cassava flour with varieties of meat\",\n          calories: 300,\n          price: 10,\n        },\n        {\n          menuId: 15,\n          name: \"Kenkey with pepper and fish\",\n          photo: kenkey,\n          description: \"A staple dish with hot pepper, sliced onions and fresh tomatoes wth shrimp and fish\",\n          calories: 300,\n          price: 10,\n        },\n        {\n          menuId: 16,\n          name: \"Waakye\",\n          photo: waakye,\n          description: \"A traditional dish of cooked rice and beans.\",\n          calories: 300,\n          price: 10,\n        },\n      ],\n    },\n    {\n      id: 7,\n      name: \"Dessets\",\n      rating: 4.9,\n      categories: [9, 11, 7],\n      priceRating: affordable,\n      photo: dessert,\n      duration: \"35 - 40 min\",\n      location: {\n        latitude: 5.5697895,\n        longitude: -0.1685567,\n      },\n      courier: {\n        avatar: avatar_1,\n        name: \"Jessie\",\n      },\n      menu: [\n        {\n          menuId: 17,\n          name: \"Ice cream\",\n          photo: icecream,\n          description: \"Multiple scoops of icecream with toppings\",\n          calories: 100,\n          price: 2,\n        },\n        {\n          menuId: 18,\n          name: \"Pastries\",\n          photo: pastries,\n          description: \"Baked goodies\",\n          calories: 100,\n          price: 3,\n        },\n        {\n          menuId: 19,\n          name: \"Krushers\",\n          photo: krushers,\n          description: \"Differbt flavoured smoothies with crushed biscuits\",\n          calories: 300,\n          price: 2,\n        },\n      ],\n    },\n    {\n      id: 8,\n      name: \"Drinks\",\n      rating: 4.9,\n      categories: [10, 11, 7, 9],\n      priceRating: affordable,\n      photo: drinks,\n      duration: \"5 - 15 min\",\n      location: {\n        latitude: 5.5697895,\n        longitude: -0.1685567,\n      },\n      courier: {\n        avatar: avatar_1,\n        name: \"Jessie\",\n      },\n      menu: [\n        {\n          menuId: 20,\n          name: \"Fruit Juice\",\n          photo: juice,\n          description: \"Varieties of healthy fruit juice \",\n          calories: 100,\n          price: 2,\n        },\n        {\n          menuId: 21,\n          name: \"Carbonated drinks\",\n          photo: soda,\n          description: \"carbonated drinks\",\n          calories: 100,\n          price: 3,\n        },\n        {\n          menuId: 22,\n          name: \"Smoothies\",\n          photo: smoothies,\n          description: \"Beverage made by puréeing ingredients\",\n          calories: 300,\n          price: 20,\n        },\n      ],\n    },\n  ];\n\n  const [categories, setCategories] = React.useState(categoryData);\n  const [selectedCategory, setSelectedCategory] = React.useState(null);\n  const [restaurants, setRestaurants] = React.useState(restaurantData);\n  const [currentLocation, setCurrentLocation] = React.useState(\n    initialCurrentLocation\n  );\n\n  function onSelectCategory(category) {\n    //filter restaurant\n    let restaurantList = restaurantData.filter((a) =>\n      a.categories.includes(category.id)\n    );\n\n    setRestaurants(restaurantList);\n\n    setSelectedCategory(category);\n  }\n\n  function getCategoryNameById(id) {\n    let category = categories.filter((a) => a.id == id);\n\n    if (category.length > 0) return category[0].name;\n\n    return \"\";\n  }\n\n  function renderMainCategories() {\n    const renderItem = ({ item }) => {\n      return (\n        <TouchableOpacity\n          style={{\n            padding: 10,\n            paddingBottom: 20,\n            backgroundColor:\n              selectedCategory?.id == item.id ? \"darkorange\" : \"#fff\",\n            borderRadius: 32,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginRight: 10,\n            ...styles.shadow,\n          }}\n          onPress={() => onSelectCategory(item)}\n        >\n          <View\n            style={{\n              width: 50,\n              height: 50,\n              borderRadius: 25,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor:\n                selectedCategory?.id == item.id ? \"#fff\" : \"#F5F5F6\",\n            }}\n          >\n            <Image\n              source={item.icon}\n              resizeMode=\"contain\"\n              style={{\n                width: 30,\n                height: 30,\n              }}\n            />\n          </View>\n\n          <Text\n            style={{\n              marginTop: 10,\n              color: selectedCategory?.id == item.id ? \"#fff\" : \"#000\",\n              fontSize: 12,\n            }}\n          >\n            {item.name}\n          </Text>\n        </TouchableOpacity>\n      );\n    };\n\n    return (\n      <View style={{ padding: 20 }}>\n        <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>Main</Text>\n        <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>Categories</Text>\n\n        <FlatList\n          data={categories}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          keyExtractor={(item) => `${item.id}`}\n          renderItem={renderItem}\n          contentContainerStyle={{ paddingVertical: 20 }}\n        />\n      </View>\n    );\n  }\n\n  function renderRestaurantList() {\n    const renderItem = ({ item }) => (\n      <TouchableOpacity\n        style={{ marginBottom: 20 }}\n        onPress={() =>\n          navigation.navigate(\"Order\", {\n            item,\n            currentLocation,\n          })\n        }\n      >\n        {/* Image */}\n        <View\n          style={{\n            marginBottom: 10,\n          }}\n        >\n          <Image\n            source={item.photo}\n            resizeMode=\"cover\"\n            style={{\n              width: \"100%\",\n              height: 200,\n              borderRadius: 30,\n            }}\n          />\n\n          <View\n            style={{\n              position: \"absolute\",\n              bottom: 0,\n              height: 50,\n              width: width * 0.35,\n              backgroundColor: \"#fff\",\n              borderTopRightRadius: 30,\n              borderBottomLeftRadius: 30,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              ...styles.shadow,\n            }}\n          >\n            <Text style={{ fontSize: 18, fontWeight: \"bold\" }}>\n              {item.duration}\n            </Text>\n          </View>\n        </View>\n\n        {/* Restaurant Info */}\n        <Text style={{ fontSize: 18, fontWeight: \"bold\" }}>{item.name}</Text>\n\n        <View\n          style={{\n            marginTop: 10,\n            flexDirection: \"row\",\n          }}\n        >\n          {/* Ratings */}\n          <Image\n            source={star}\n            style={{\n              height: 20,\n              width: 20,\n              tintColor: \"darkorange\",\n              marginRight: 10,\n            }}\n          />\n          <Text style={{ fontSize: 16 }}>{item.rating}</Text>\n\n          {/* Different Categories */}\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginLeft: 10,\n            }}\n          >\n            {item.categories.map((categoryId) => {\n              return (\n                <View style={{ flexDirection: \"row\" }} key={categoryId}>\n                  <Text style={{ fontSize: 16 }}>\n                    {getCategoryNameById(categoryId)}\n                  </Text>\n                  <Text style={{ fontSize: 20, color: \"#898C95\" }}> . </Text>\n                </View>\n              );\n            })}\n\n            {/* Prices of foods */}\n            {[1, 2, 3].map((priceRating) => (\n              <Text\n                key={priceRating}\n                style={{\n                  fontSize: 16,\n                  color: priceRating <= item.priceRating ? \"#000\" : \"darkgrey\",\n                }}\n              >\n                $\n              </Text>\n            ))}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n\n    return (\n      <FlatList\n        data={restaurants}\n        keyExtractor={(item) => `${item.id}`}\n        renderItem={renderItem}\n        contentContainerStyle={{\n          paddingHorizontal: 20,\n          paddingBottom: 30,\n        }}\n      />\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.location_img}>\n          <Image source={nearby} resizeMode=\"contain\" style={styles.nearby} />\n        </TouchableOpacity>\n\n        <View style={styles.street}>\n          <Text style={styles.street_name}>{currentLocation.streetName}</Text>\n        </View>\n\n        <TouchableOpacity style={styles.cart}>\n          <Image source={basket} resizeMode=\"contain\" style={styles.basket} />\n        </TouchableOpacity>\n      </View>\n      {renderMainCategories()}\n      {renderRestaurantList()}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n  },\n\n  header: {\n    flexDirection: \"row\",\n    height: 50,\n    justifyContent: \"space-between\",\n  },\n\n  location_img: {\n    width: 50,\n    paddingLeft: 20,\n    justifyContent: \"center\",\n  },\n\n  nearby: {\n    width: 30,\n    height: 30,\n  },\n\n  street: {\n    backgroundColor: \"#e6e6e6\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    width: \"50%\",\n    height: \"70%\",\n    alignSelf: \"center\",\n  },\n\n  street_name: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n\n  cart: {\n    width: 50,\n    paddingRight: 20,\n    justifyContent: \"center\",\n  },\n\n  basket: {\n    width: 30,\n    height: 30,\n  },\n\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}